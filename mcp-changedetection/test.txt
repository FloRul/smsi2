1. System Status Check

    "What's the system information for the changedetection.io instance?"
    "How many watches and tags are currently in the system?"
    "What version of changedetection.io is running?"

2. Listing Current Watches

    "List all the watches currently configured"
    "Show me all active watches"
    "Are there any paused watches in the system?"

Watch Creation Tests
3. Basic Watch Creation

    "Create a watch for https://example.com"
    "Monitor the website https://news.ycombinator.com with title 'Hacker News'"
    "Add a new watch for https://github.com and check it every 3600 seconds"

4. Advanced Watch Creation

    "Create a paused watch for https://reddit.com/r/technology"
    "Set up a watch for https://example.org using the html_webdriver backend"
    "Create a watch for https://api.example.com with POST method"

Search and Discovery
5. Search Functionality

    "Search for watches containing 'example' in their URL"
    "Find all watches monitoring github.com"
    "Search for watches with 'News' in their title"
    "Do a partial search for watches with 'tech' in the URL"

6. Watch Details

    "Get details for watch [use actual UUID from list]"
    "Show me the full information for watch [UUID]"
    "What's the status of watch [UUID]?"

Watch Management
7. Update Operations

    "Update watch [UUID] to have title 'Updated Title'"
    "Change the URL of watch [UUID] to https://newsite.com"
    "Set watch [UUID] check interval to 7200 seconds"
    "Change watch [UUID] to use html_webdriver backend"

8. Status Changes

    "Pause watch [UUID]"
    "Unpause watch [UUID]"
    "Mute notifications for watch [UUID]"
    "Recheck watch [UUID] now"

History and Snapshots
9. History Retrieval

    "Show me the history for watch [UUID]"
    "Get all snapshots for watch [UUID]"
    "When was watch [UUID] last checked?"

10. Snapshot Access

    "Get the latest snapshot for watch [UUID]"
    "Show me the latest HTML content for watch [UUID]"
    "Retrieve snapshot from timestamp [timestamp] for watch [UUID]"

Tag Management
11. Tag Operations

    "List all tags in the system"
    "Create a tag called 'Important Sites'"
    "Create a tag 'News Sources' with notification URL mailto:admin@example.com"
    "Show me details for tag [tag UUID]"

12. Tag Updates

    "Update tag [UUID] title to 'Critical Monitors'"
    "Mute notifications for tag [UUID]"
    "Recheck all watches in tag [UUID]"
    "Delete tag [UUID]"

13. Watch-Tag Association

    "Create a watch for https://bbc.com with tag [tag UUID]"
    "List all watches with tag 'Important Sites'"
    "Search for watches in tag 'News Sources'"

Notification Management
14. Global Notifications

    "Show me all configured notification URLs"
    "Add notification URL 'mailto:alerts@company.com' to the system"
    "Add Discord webhook 'discord://webhook_id/webhook_token' to notifications"

15. Notification Updates

    "Replace all notification URLs with 'mailto:newalerts@company.com'"
    "Delete notification URL 'mailto:old@company.com'"
    "Clear all notification URLs"

Bulk Operations
16. Import Testing

    "Import these URLs for monitoring: https://site1.com, https://site2.com, https://site3.com"
    "Import https://example1.com and https://example2.com with tag 'Batch Import'"
    "Import these sites without deduplication: https://test1.com, https://test1.com"

17. Bulk Status Changes

    "Recheck all watches"
    "List all watches with tag 'Important Sites' and recheck them"

Error Handling Tests
18. Invalid Operations

    "Get details for watch invalid-uuid-123"
    "Delete watch that-doesnt-exist"
    "Update non-existent tag xyz123"
    "Create a watch without providing a URL"

19. Edge Cases

    "Create a watch with an extremely long title (over 5000 characters)"
    "Search for watches with empty query"
    "Get snapshot for timestamp 'invalid-timestamp'"

Cleanup Operations
20. Deletion Tests

    "Delete watch [UUID]"
    "Remove tag [UUID]"
    "Delete all watches with 'test' in the URL" (requires search first, then individual deletions)

Comprehensive Workflow Test
21. Full Workflow Scenario

    "Get system info"
    "Create a tag called 'Test Monitoring'"
    "Create a watch for https://example.com with tag 'Test Monitoring' and title 'Test Site' checking every 1800 seconds"
    "List all watches"
    "Search for watches with 'example' in URL"
    "Get details for the created watch"
    "Update the watch title to 'Updated Test Site'"
    "Pause the watch"
    "Get history for the watch"
    "Get latest snapshot for the watch"
    "Unpause the watch"
    "Add notification URL 'mailto:test@example.com'"
    "Recheck the watch"
    "Mute the watch"
    "Delete the watch"
    "Delete the tag"
    "Verify system info shows updated counts"

Performance and Reliability Tests
22. Concurrent Operations

    Create multiple watches in quick succession
    Update several watches simultaneously
    Search while creating new watches

23. Recovery Tests

    "What happens if I try to create a duplicate watch for the same URL?"
    "Can I recover deleted watch information?"
    "Show me the last error for watch [UUID]"

These test questions cover:

    CRUD operations (Create, Read, Update, Delete) for all entities
    Edge cases and error scenarios
    Complex workflows combining multiple operations
    Search and filtering capabilities
    Bulk operations and imports
    Status management (pause, mute, recheck)
    History and snapshot retrieval
    Notification configuration
    Tag management and organization

Users should replace [UUID] placeholders with actual UUIDs obtained from list operations, and can modify URLs and parameters to match their specific testing needs.